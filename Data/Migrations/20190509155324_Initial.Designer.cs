// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(FarmBotDbContext))]
    [Migration("20190509155324_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entites.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Info")
                        .HasMaxLength(250);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Entites.FarmBot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .HasMaxLength(75);

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("FarmBots");
                });

            modelBuilder.Entity("Entites.Parameters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("AirTemperature");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("FarmBotId");

                    b.Property<byte>("Luminosity");

                    b.Property<byte>("SoilHumidity");

                    b.HasKey("Id");

                    b.HasIndex("FarmBotId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Entites.Plant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<short>("Duration");

                    b.Property<string>("Info")
                        .HasMaxLength(250);

                    b.Property<byte>("IrigationsPerDay");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RowDistance");

                    b.Property<short>("SeedDepth");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<byte>("WaterQuanity");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Entites.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("FarmBotId");

                    b.Property<Guid>("PlantId");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FarmBotId");

                    b.HasIndex("PlantId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Entites.Parameters", b =>
                {
                    b.HasOne("Entites.FarmBot", "FarmBot")
                        .WithMany()
                        .HasForeignKey("FarmBotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entites.Settings", b =>
                {
                    b.HasOne("Entites.FarmBot", "FarmBot")
                        .WithMany()
                        .HasForeignKey("FarmBotId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entites.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
